<?php

require_once ("Connection.php");
require_once ("CRUD.php");

class Sale extends Connection implements CRUD
{
    private $date;
    private $billNo;
    private $pairs;
    private $amount;
    private $TABLE;
    public function __construct()
    {
        parent::__construct();
        $this->TABLE="SALES";
    }


    /**
     * @return mixed
     */
    public function getDate()
    {
        return $this->date;
    }

    /**
     * @param mixed $date
     */
    public function setDate($date)
    {
        $this->date = $date;
    }

    /**
     * @return mixed
     */
    public function getBillNo()
    {
        return $this->billNo;
    }

    /**
     * @param mixed $billNo
     */
    public function setBillNo($billNo)
    {
        $this->billNo = $billNo;
    }

    /**
     * @return mixed
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * @param mixed $amount
     */
    public function setAmount($amount)
    {
        $this->amount = $amount;
    }

    /**
     * @return mixed
     */
    public function getPairs()
    {
        return $this->pairs;
    }

    /**
     * @param mixed $pairs
     */
    public function setPairs($pairs)
    {
        $this->pairs = $pairs;
    }

    function insert()
    {
        // TODO: Implement insert() method.
        $query  = "INSERT INTO $this->TABLE (Date,Pairs,Amount) VALUES(?,?,?)";
        $prepared = $this->prepareQuery($query);
        $param = [$this->date,$this->pairs,$this->amount];
        $this->executeQuery($prepared,$param);
    }

    function update()
    {
        // TODO: Implement update() method.
    }

    function delete()
    {
        // TODO: Implement delete() method.
    }

    function retrieve()
    {
        // TODO: Implement retrieve() method.
    }

    function retriveAll()
    {
        // TODO: Implement retriveAll() method.
        $query = "SELECT *FROM $this->TABLE";
        $prepared = $this->prepareQuery($query);
        $this->executeQuery($prepared,null);
        return $prepared;
    }
    function retriveToday()
    {
        $query = "SELECT *FROM $this->TABLE WHERE DATE =?";
        $prepared = $this->prepareQuery($query);
        $param = [$this->date];
        $this->executeQuery($prepared,$param);
        return $prepared;
    }
    public function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }
}